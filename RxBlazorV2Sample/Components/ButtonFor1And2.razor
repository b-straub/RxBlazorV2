@using RxBlazorV2Sample.HelperModel
@using RxBlazorVSSampleComponents.ErrorManager

<MudStack Style="width: fit-content">
    <MudButton @onclick="() => Model.Increment1.Execute()" Variant="Variant.Filled" Color="Color.Primary">
        Increment Counter1
    </MudButton>

    <MudButton @onclick="async () => await Model.IncrementAsync1.ExecuteAsync()" Variant="Variant.Filled"
               Color="Color.Secondary">
        Increment Counter1 Async
    </MudButton>

    <MudButton @onclick="() => Model.Add2.Execute(Switcher.Count)" Variant="Variant.Filled" 
               Color=@(Switcher.AddMode ? Color.Success : Color.Error)
               Disabled="@(!Model.Add2.CanExecute)">
        @AddText
    </MudButton>

    <MudButton @onclick="() => Model.AddAsync2.ExecuteAsync(Switcher.Count)" Variant="Variant.Filled"
               Color=@(Switcher.AddMode ? Color.Success : Color.Error)
               Disabled="@(!Model.Add2.CanExecute || Model.AddAsync2.Executing)">
        @(AddText + " Async")
    </MudButton>
    
    <MudButton @onclick="() => Switcher.SwitchOnAdd10.Execute()" Variant="Variant.Filled"
               Color=Color.Primary
               Disabled="@(!Switcher.SwitchOnAdd10.CanExecute)">
        SwitchOn Add10
    </MudButton>

    <MudSwitch @bind-Value="Switcher.Add10" Color="Color.Info" UncheckedColor="Color.Secondary"
               Label=@(Switcher.Add10 ? "10" : "5")/>

    <MudSwitch @bind-Value="Switcher.AddMode" Color="Color.Success" UncheckedColor="Color.Error"
               Label=@(Switcher.AddMode ? "Add" : "Subtract")/>
    
    <ErrorTrigger />
</MudStack>

@code
{
    [Parameter]
    [EditorRequired]
    public CounterModel Model { get; set; }
    
    [Inject]
    public required Switcher Switcher { get; init; }

    private string AddText => Switcher.AddMode ? Switcher.Add10 ? "Add 10 to Counter 2" : "Add 5 to Counter 2"
        : Switcher.Add10 ? "Subtract 10 from Counter 2" : "Subtract 5 from Counter 2";
}